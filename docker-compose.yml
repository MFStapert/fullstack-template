services:
  database:
    image: postgres:16.3-alpine
    container_name: database
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 5s
      timeout: 1s
      retries: 10

  backend:
    image: backend
    build:
      context: .
      target: backend
    container_name: backend
    profiles: [full]
    env_file: './backend/.env.docker'
    depends_on:
      database:
        condition: service_healthy

  frontend:
    image: frontend
    build:
      context: .
      target: frontend
    container_name: frontend
    profiles: [full]

  proxy:
    image: caddy:2-alpine
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    volumes:
      - ./proxy/docker.Caddyfile:/etc/caddy/Caddyfile

  e2e:
    image: e2e
    build:
      context: .
      target: e2e
    container_name: e2e
    depends_on:
      backend:
        condition: service_healthy
    network_mode: 'host'
    profiles: [e2e]
